<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "{{%fragments}}".
 *
 * @property integer $id
 * @property string $name
 * @property integer $data_upload
 */
class Fragments extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%fragments}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['data_upload'], 'integer'],
            [['name'], 'string', 'max' => 30]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Computer name',
            'data_upload' => 'Data Upload',
        ];
    }
    
    public function listComputers(){
        $model = \yii\helpers\ArrayHelper::map($this->find()->all(), 'id', 'name');
        return $model;
    }
    
    public function getdata($id){
        $comp = $this->findOne($id)->name;
        $tables = ['participant', 'blood', 'bp_24h', 'bp_spot', 'monitoring_bp_24_data', 'questionnaire', 'urine'];
        
        foreach ($tables as $value) {
            $this->getremotedata($value, $comp);
        }
        
        return true;
    }
    
    public function getremotedata($table, $comp){
        $db = new yii\db\Connection([
            'dsn' => "mysql:host=$comp;dbname=shinda2",
            'username' => 'root',
            'password' => '12345',
            'charset' => 'utf8',
        ]);
        $sql = "SELECT * FROM tbl_".$table." WHERE altered = 1";
        $data = $db->createCommand($sql) //convert it to array to speend up the process
        ->queryAll();
        $this->insertData($data, $table);
    }
    
    public function insertData($data, $table){
        $db = \Yii::$app->db;
        $table = "tbl_".$table;
        $columns = $db->getTableSchema($table)->columnNames;
        foreach ($data as $value) {
            for($index =0;$index < count($columns);$index++){
                if($table == 'blood'){$mod = new Blood();}else if($table == 'bp_24h'){$mod = new Bp24h();}else if($table == 'bp_spot'){$mod = new Bpspot();}else if($table == 'monitoring_bp_24_data'){$mod = new Monitoringbp24data();}else if($table == 'questionnaire'){$mod = new Questionnaire();}else if($table == 'urine'){$mod = new Urine();}
                $col = $columns[$index];
                if($table == 'participant'){
                    $mod = Participant::findOne($value[$columns[$index]]);
                }
                $mod->$col = $value[$columns[$index]];
                $mod->save(FALSE);
            }
        }
        Yii::$app->db->createCommand()->update($table, ['altered' => NULL])->execute();
        return true;
    }
    
    public function pushparticpants($id){
        $data = Participant::find()->all();
        $dbs = \Yii::$app->db;
        $columns = $dbs->getTableSchema('tbl_participant')->columnNames;
         $comp = $this->findOne($id)->name;
        $db = new yii\db\Connection([
            'dsn' => "mysql:host=$comp;dbname=shinda2",
            'username' => 'root',
            'password' => 'FAQU',
            'charset' => 'utf8',
        ]);
        foreach ($data as $value) {
            for($index =0;$index < count($columns);$index++){
                $col = $columns[$index];
                $db->createCommand()->insert('tbl_participant', [
                    $col  => $value[$columns[$index]],
                ])->execute();
            }     
        }
    }
}
